@page
@using gpconnect_appointment_checker.Helpers.Constants
@using gpconnect_appointment_checker.Helpers.Enumerations
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using gpconnect_appointment_checker.Helpers
@using gpconnect_appointment_checker.Helpers.Extensions
@model AdminModel
@{
    var UserEmailAddressInvalid = Model.ModelState["UserEmailAddress"]?.ValidationState == ModelValidationState.Invalid;
}

<h1>Appointment Checker Admin</h1>
<form method="post">
    <div class="nhsuk-do-dont-list">
        <h3 class="nhsuk-do-dont-list__label">@SearchConstants.AddNewUserText</h3>
        <div class="nhsuk-form-group@(UserEmailAddressInvalid ? " nhsuk-form-group--error" : string.Empty)">
            <label class="nhsuk-label" for="input-useremailaddress">@SearchConstants.NewUserEmailAddress</label>
            @if (UserEmailAddressInvalid)
            {
                @Html.ValidationMessageFor(m => m.UserEmailAddress, "", new { @class = "nhsuk-error-message" })
            }
            <input
                class="nhsuk-input nhsuk-input--width-100@(UserEmailAddressInvalid ? " nhsuk-input--error" : string.Empty)"
                id="input-useremailaddress" no-validate asp-for="@Model.UserEmailAddress"
                name="useremailaddress" value="@Model.UserEmailAddress" type="text"
                aria-describedby="input-useremailaddress-hint-text">
        </div>
        <button class="nhsuk-button" asp-page-handler="SaveNewUser"
                type="submit">@SearchConstants.SaveNewUserButtonText</button>
    </div>
</form>

<div class="form-container">
    <!-- First form (Filter Search) -->
    <form method="post" id="user-filter-search" class="search-form">
        <div class="admin-grid-row">
            <div class="form-field">
                <label for="input-emailaddress">Email:</label>
                <input class="nhsuk-input" id="input-emailaddress" no-validate
                       asp-for="@Model.FilterModel.EmailAddress" value="@Model.FilterModel.EmailAddress"
                       type="text" aria-describedby="email-address-hint-text">
            </div>
            <div class="form-field">
                <label for="input-surname">Surname:</label>
                <input class="nhsuk-input" id="input-surname"
                       no-validate asp-for="@Model.FilterModel.Surname"
                       value="@Model.FilterModel.Surname" type="text"
                       aria-describedby="input-surname-hint-text">
            </div>
        </div>
        <div class="admin-grid-row">
            <div class="form-field">
                <label>Access Level:</label>
                @Html.DropDownListFor(m => m.FilterModel.AccessLevelFilter,
                    new SelectList(Enum.GetValues(typeof(AccessLevel)).Cast<AccessLevel>().Select(v => new SelectListItem
                    {
                        Text = v.ToString(),
                        Value = v.ToString()
                    }), "Value", "Text", Model.FilterModel.AccessLevelFilter), "", new { @class = "nhsuk-select" })
            </div>
            <div class="form-field">
                <label>Account Status:</label>
                @Html.DropDownListFor(m => m.FilterModel.UserAccountStatusFilter,
                    new SelectList(Enum.GetValues(typeof(UserAccountStatus)).Cast<UserAccountStatus>().Where(x => x != UserAccountStatus.Unknown).Select(v => new SelectListItem
                    {
                        Text = v.GetDescription(),
                        Value = ((int)v).ToString()
                    }), "Value", "Text", Model.FilterModel.UserAccountStatusFilter), "", new { @class = "nhsuk-select" })
            </div>
        </div>
        <div class="admin-grid-row">
            <div class="form-field">
                <label>Multi Search (Y/N):</label>
                @Html.DropDownListFor(m => m.FilterModel.MultiSearchFilter,
                    new List<SelectListItem>()
                    {
                        new SelectListItem() { Text = string.Empty, Value = string.Empty },
                        new SelectListItem() { Text = true.BooleanToYesNo(), Value = true.ToString() },
                        new SelectListItem() { Text = false.BooleanToYesNo(), Value = false.ToString() }
                    }, new { @class = "nhsuk-select" })
            </div>
            <div class="form-field">
                <label>Org Type (Y/N):</label>
                @Html.DropDownListFor(m => m.FilterModel.OrgTypeSearchFilter,
                    new List<SelectListItem>()
                    {
                        new SelectListItem() { Text = string.Empty, Value = string.Empty },
                        new SelectListItem() { Text = true.BooleanToYesNo(), Value = true.ToString() },
                        new SelectListItem() { Text = false.BooleanToYesNo(), Value = false.ToString() }
                    }, new { @class = "nhsuk-select" })
            </div>
        </div>
        <div class="button-row">
            <div class="form-field-button">
                <button class="nhsuk-button" asp-page-handler="Filter"
                        type="submit">@SearchConstants.ApplyFilterButtonText</button>

                <button class="nhsuk-button nhsuk-button--secondary"
                        type="submit"
                        asp-page-handler="ClearSearch">
                    @SearchConstants.ClearButtonText
                </button>
            </div>
        </div>
    </form>
</div>

@* <partial name="Pagination" model="Model.Paging"/> *@

<form method="post" id="search-input-form">
    <div class="nhsuk-grid-row">
        <div class="nhsuk-grid-column-full">
            <div class="nhsuk-table__panel-with-heading-tab">
                <h3 class="nhsuk-table__heading-tab">@SearchConstants.UserListText</h3>


                <table class="nhsuk-table">
                    <caption
                        class="nhsuk-table__caption nhsuk-u-visually-hidden">@SearchConstants.UserListText</caption>
                    <thead role="rowgroup" class="nhsuk-table__head">

                    <tr role="row">
                        <th role="columnheader" class="" scope="col">
                            <button class="nhsuk-tag nhsuk-label" asp-route-sortby="@SortBy.EmailAddress"
                                    asp-route-sortdirection="@if (Model.SortByState == SortDirection.Asc) { @SortDirection.Desc.ToString() }else { @SortDirection.Asc.ToString() }"
                                    asp-page-handler="SortBy" type="submit">
                                @SearchConstants.UserListResultsEmailAddress
                                @if (Model.SortByColumn == SortBy.EmailAddress)
                                {
                                    @Html.Raw(Model.SortByDirectionIcon)
                                }
                            </button>
                        </th>
                        <th role="columnheader" class="" scope="col">@SearchConstants.UserListResultsDisplayName</th>
                        <th role="columnheader" class="" scope="col">
                            <button class="nhsuk-tag nhsuk-label" asp-route-sortby="@SortBy.LastLogonDate"
                                    asp-route-sortdirection="@if (Model.SortByState == SortDirection.Asc) { @SortDirection.Desc.ToString() }else { @SortDirection.Asc.ToString() }"
                                    asp-page-handler="SortBy" type="submit">
                                @SearchConstants.UserListResultsLastLogonDate
                                @if (Model.SortByColumn == SortBy.LastLogonDate)
                                {
                                    @Html.Raw(Model.SortByDirectionIcon)
                                }
                            </button>
                        </th>
                        <th role="columnheader" class="" scope="col">
                            <button class="nhsuk-tag nhsuk-label" asp-route-sortby="@SortBy.AccessRequests"
                                    asp-route-sortdirection="@if (Model.SortByState == SortDirection.Asc) { @SortDirection.Desc.ToString() }else { @SortDirection.Asc.ToString() }"
                                    asp-page-handler="SortBy" type="submit">
                                @SearchConstants.UserListResultsAccessRequestCount
                                @if (Model.SortByColumn == SortBy.AccessRequests)
                                {
                                    @Html.Raw(Model.SortByDirectionIcon)
                                }
                            </button>
                        </th>
                        <th role="columnheader" class="" scope="col">@SearchConstants.UserListResultsAccessLevel</th>
                        <th role="columnheader" class="" scope="col">@SearchConstants.UserListResultsStatus</th>
                        <th role="columnheader" class=""
                            scope="col">@SearchConstants.UserListResultsMultiSearchEnabled</th>
                        <th role="columnheader" class=""
                            scope="col">@SearchConstants.UserListResultsOrgTypeSearchEnabled</th>
                    </tr>
                    </thead>
                    <tbody class="nhsuk-table__body">


                    <tr role="row" scope="nhsuk-table__cell">
                        <td role="cell" colspan="9" class=""
                            scope="nhsuk-table__cell">Showing
                            @Model.UserList.Length result(s)
                            of @string.Format(SearchConstants.UsersFoundText, Model.Paging.TotalItems)</td>
                    </tr>
                    @if (Model.UserList.Length > 0)
                    {
                        @for (int i = 0; i < Model.UserList.Length; i++)
                        {
                            var isAdmin = !Model.UserList[i].IsAdmin;
                            var isMultiSearch = !Model.UserList[i].MultiSearchEnabled;
                            var isOrgTypeSearch = !Model.UserList[i].OrgTypeSearchEnabled;
                            var isPastLastLogonThreshold = Model.UserList[i].IsPastLastLogonThreshold;
                            var isRequestUser = Model.UserList[i].IsRequestUser;

                            <tr role="row" class="@(isPastLastLogonThreshold ? "nhsuk-row-warning" : string.Empty)"
                                scope="nhsuk-table__cell">
                                <td role="cell" class=""
                                    scope="nhsuk-table__cell">@Model.UserList[i].EmailAddress</td>
                                <td role="cell" class=""
                                    scope="nhsuk-table__cell">@Model.UserList[i].DisplayName</td>
                                <td role="cell" class=""
                                    scope="nhsuk-table__cell">@Model.UserList[i].LastLogonDate</td>
                                <td role="cell" class=""
                                    scope="nhsuk-table__cell">@Model.UserList[i].AccessRequests</td>


                                <td role="cell" class="" scope="nhsuk-table__cell">
                                    @if (!isRequestUser)
                                    {
                                        <button type="submit"
                                                class="nhsuk-tag@(Model.UserList[i].IsAdmin ? " nhsuk-tag--yellow" : string.Empty)"
                                                asp-route-isadminuserid="@Model.UserList[i].UserId"
                                                asp-route-isadmin="@isAdmin" asp-page-handler="SetIsAdmin">
                                            @Model.UserList[i].AccessLevel
                                        </button>
                                    }
                                    else
                                    {
                                        <strong
                                            class="nhsuk-tag@(Model.UserList[i].IsAdmin ? " nhsuk-tag--yellow" : string.Empty)">@Model.UserList[i].AccessLevel</strong>
                                    }
                                </td>

                                <td role="cell" class="" scope="nhsuk-table__cell">
                                    <select id="UserAccountStatusId" name="UserAccountStatusId" class="nhsuk-select"
                                            asp-for="@Model.UserList[i].UserAccountStatusId"
                                            asp-items="Html.GetEnumSelectList<UserAccountStatus>()"></select>
                                    @if (!isRequestUser)
                                    {
                                        <button type="submit" class="nhsuk-tag nhsuk-tag--green"
                                                asp-route-accountstatususerid="@Model.UserList[i].UserId"
                                                asp-route-userselectedindex="@i"
                                                asp-page-handler="SetUserAccountStatus">
                                            Update Status
                                        </button>
                                    }
                                </td>
                                <td role="cell" class="" scope="nhsuk-table__cell">

                                    <button type="submit"
                                            class="nhsuk-tag nhsuk-tag--blue@(isMultiSearch ? " nhsuk-tag--pink" : string.Empty)"
                                            asp-route-multisearchstatususerid="@Model.UserList[i].UserId"
                                            asp-route-multisearchstatus="@isMultiSearch"
                                            asp-page-handler="SetMultiSearch">@Model.UserList[i].MultiSearchEnabled.BooleanToYesNo()</button>

                                </td>
                                <td role="cell" class="" scope="nhsuk-table__cell">
                                    <button type="submit"
                                            class="nhsuk-tag nhsuk-tag--blue@(isOrgTypeSearch ? " nhsuk-tag--pink" : string.Empty)"
                                            asp-route-orgtypesearchstatususerid="@Model.UserList[i].UserId"
                                            asp-route-orgtypesearchstatus="@isOrgTypeSearch"
                                            asp-page-handler="SetOrgTypeSearch">@Model.UserList[i].OrgTypeSearchEnabled.BooleanToYesNo()</button>

                                </td>
                            </tr>
                        }
                    }
                    <tr role="row" scope="nhsuk-table__cell">
                        <td role="cell" colspan="9" class=""
                            scope="nhsuk-table__cell">Showing
                            @Model.UserList.Length
                            result(s) of @string.Format(SearchConstants.UsersFoundText, Model.Paging.TotalItems)</td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <input type="hidden" asp-for="SortByColumn" value=@Model.SortByColumn/>
    <input type="hidden" asp-for="SortByState" value=@Model.SortByState/>
    <input type="hidden" asp-for="FilterModel.Surname" value=@Model.FilterModel.Surname/>
    <input type="hidden" asp-for="FilterModel.EmailAddress" value=@Model.FilterModel.EmailAddress/>
    <input type="hidden" asp-for="FilterModel.UserAccountStatusFilter"
           value=@Model.FilterModel.UserAccountStatusFilter/>
    <input type="hidden" asp-for="FilterModel.AccessLevelFilter" value=@Model.FilterModel.AccessLevelFilter/>
    <input type="hidden" asp-for="FilterModel.MultiSearchFilter" value=@Model.FilterModel.MultiSearchFilter/>
    <input type="hidden" asp-for="FilterModel.OrgTypeSearchFilter"
           value=@Model.FilterModel.OrgTypeSearchFilter/>
</form>

<partial name="Pagination" model="Model.Paging"/>
