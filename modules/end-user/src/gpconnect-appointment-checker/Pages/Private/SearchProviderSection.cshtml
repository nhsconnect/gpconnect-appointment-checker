@using Microsoft.AspNetCore.Mvc.ModelBinding
@using gpconnect_appointment_checker.Helpers.Constants
@model SearchModel
@{
    var providerOdsCodeInvalid = Model.ModelState["ProviderODSCode"]?.ValidationState == ModelValidationState.Invalid;
}

<div class="nhsuk-card nhsuk-card--feature">
    <div class="nhsuk-card__content nhsuk-card__content--feature">
        <h2 class="nhsuk-card__heading nhsuk-card__heading--feature nhsuk-heading-m">
            @SearchConstants.Searchresultssearchatheadingtext
        </h2>
        <div class="nhsuk-form-group @(providerOdsCodeInvalid ? "nhsuk-form-group--error" : string.Empty)">
            <label class="nhsuk-label" for="input-providerodscode">@Model.ProviderOdsCodeInputBoxLabel</label>
            <div class="nhsuk-hint" id="input-providerodscode-hint-text">
                @Html.Raw(string.Format(Model.ProviderOdsCodeInputBoxHintText, Model.MaxNumberProviderCodesSearch))
                <br/>
                <br/>
                @{
                    var odsUrl = "https://www.odsdatasearchandexport.nhs.uk/";
                    var odsMessage = string.Format(SearchConstants.OdsLookup, odsUrl);
                }
                <p>@Html.Raw(odsMessage)</p>
            </div>

            @if (providerOdsCodeInvalid)
            {
                @Html.ValidationMessageFor(m => m.ProviderOdsCode, "", new { @class = "nhsuk-error-message" })
            }
            <input
                class="nhsuk-input nhsuk-input--width-@Model.SearchInputBoxLength @(providerOdsCodeInvalid ? "nhsuk-input--error" : string.Empty)"
                id="input-providerodscode" no-validate asp-for="@Model.ProviderOdsCode" name="providerodscode"
                value="@Model.ProviderOdsCode" type="search" aria-describedby="input-providerodscode-hint-text">
        </div>
    </div>
</div>